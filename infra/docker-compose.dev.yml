version: "3.9"

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
      POSTGRES_DB: notes
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U app -d notes || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 3s
      retries: 5

  auth:
    build:
      context: ../services/auth
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      PORT: 8001
      DATABASE_URL: postgresql+asyncpg://app:app@postgres:5432/notes
      REDIS_URL: redis://redis:6379/0
      JWT_SECRET: change-me
      JWT_REFRESH_SECRET: change-me-too
    depends_on:
      - postgres
      - redis
    healthcheck:
      test: [ "CMD-SHELL", "python -c \"import sys,urllib.request; urllib.request.urlopen('http://localhost:8001/healthz', timeout=2)\"" ]
      interval: 10s
      timeout: 3s
      retries: 5

  notes:
    build:
      context: ../services/notes
      dockerfile: Dockerfile
    ports:
      - "8002:8002"
    environment:
      PORT: 8002
      DATABASE_URL: postgresql+asyncpg://app:app@postgres:5432/notes
      REDIS_URL: redis://redis:6379/0
    depends_on:
      - postgres
      - redis
    healthcheck:
      test: [ "CMD-SHELL", "python -c \"import sys,urllib.request; urllib.request.urlopen('http://localhost:8002/healthz', timeout=2)\"" ]
      interval: 10s
      timeout: 3s
      retries: 5
